name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out the code
        uses: actions/checkout@v2

      # Step 2: Set up Google Cloud credentials
      - name: Set up GCP credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Step 3: Log in to Google Container Registry (GCR)
      - name: Log in to Google Container Registry
        run: |
          gcloud auth configure-docker

      # Step 4: Build and push backend image to GCR
      - name: Build and push backend image to GCR
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest ./backend
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest

      # Step 5: Build and push frontend image to GCR
      - name: Build and push frontend image to GCR
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest ./frontend
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

      # Step 6: Deploy backend to Google Cloud Run
      - name: Deploy backend to Google Cloud Run
        run: |
          gcloud run deploy backend-service \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated

      # Step 7: Deploy frontend to Google Cloud Run
      - name: Deploy frontend to Google Cloud Run
        run: |
          gcloud run deploy frontend-service \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated
